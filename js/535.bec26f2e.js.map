{"version":3,"file":"js/535.bec26f2e.js","mappings":"gMASM,SAAUA,IACZ,MAAMC,GAAyBC,EAAAA,EAAAA,IAAI,IAE7BC,EAAeA,KACjB,MAAMC,EAAiBC,aAAaC,QAAQ,iBACxCF,IACAH,EAASM,MAAQC,KAAKC,MAAML,G,EAI9BM,EAAeA,KACjBL,aAAaM,QAAQ,gBAAiBH,KAAKI,UAAUX,EAASM,OAAO,EAGnEM,EAAkBC,IACpB,MAAMC,EAAQd,EAASM,MAAMS,WAAUC,GAAQA,EAAKC,KAAOJ,EAAMI,MAClD,IAAXH,EACAd,EAASM,MAAMY,KAAKL,GAEpBb,EAASM,MAAMa,OAAOL,EAAO,GAEjCL,GAAc,EAGZW,EAAgBC,GACXrB,EAASM,MAAMgB,MAAKN,GAAQA,EAAKC,KAAOI,IAGnD,MAAO,CACHrB,WACAE,eACAU,iBACAQ,eAER,C,qGC1COG,MAAM,aAAatB,IAAI,iB,EAD9B,Y,EAAA,c,GAQesB,MAAM,e,GARrBC,IAAA,EAa4CD,MAAM,kB,GAblDC,IAAA,EAgBSD,MAAM,c,EAhBf,a,EAAA,a,0CACEE,EAAAA,EAAAA,IAoBM,MApBNC,EAoBM,EAnBJC,EAAAA,EAAAA,IAUM,OAVAJ,OAFVK,EAAAA,EAAAA,IAAA,kBAEoCC,EAAAC,e,gBAC9BL,EAAAA,EAAAA,IAQMM,EAAAA,GAAA,MAXZC,EAAAA,EAAAA,IAGyCC,EAAAC,uBAHzC,CAGmBC,EAAYrB,M,WAAzBW,EAAAA,EAAAA,IAQM,OARqDD,IAAKV,EAC1DS,OAJZK,EAAAA,EAAAA,IAAA,mBAI2CO,EAAWC,SAAWH,EAAAI,Y,gBACzDZ,EAAAA,EAAAA,IAKMM,EAAAA,GAAA,MAVdC,EAAAA,EAAAA,IAK6BG,GAATtB,K,WAAZY,EAAAA,EAAAA,IAKM,OAL4BD,IAAKX,EAAMI,GAAIM,MAAM,aACjDe,QAAKC,GAAEN,EAAArB,eAAeC,I,EAC1Bc,EAAAA,EAAAA,IAA8D,OAAxDa,IAAKP,EAAAQ,YAAY5B,EAAM6B,aAAeC,IAAK9B,EAAM+B,O,OAPjEC,IAQUlB,EAAAA,EAAAA,IAAgD,MAAhDmB,GAAgDC,EAAAA,EAAAA,IAApBlC,EAAM+B,OAAK,gBACvCjB,EAAAA,EAAAA,IAAwC,OAAnCJ,MAAM,sBAAqB,MAAE,OAT5CyB,M,uBAayC,IAA1Bf,EAAAgB,eAAeb,SAAM,WAAhCX,EAAAA,EAAAA,IAEM,MAFNyB,EAA+D,uBAbnEC,EAAAA,EAAAA,IAAA,OAgBkClB,EAAAmB,WAAa,IAAH,WAAxC3B,EAAAA,EAAAA,IAIM,MAJN4B,EAIM,EAHJ1B,EAAAA,EAAAA,IAAwE,UAA/DW,QAAKgB,EAAA,KAAAA,EAAA,OAAAC,IAAEtB,EAAAuB,UAAAvB,EAAAuB,YAAAD,IAAWE,SAA0B,IAAhBxB,EAAAyB,aAAmB,OAAO,EAjBrEC,IAkBMhC,EAAAA,EAAAA,IAAiD,aAAAoB,EAAAA,EAAAA,IAAxCd,EAAAyB,aAAc,OAAGX,EAAAA,EAAAA,IAAGd,EAAAmB,YAAU,IACvCzB,EAAAA,EAAAA,IAAiF,UAAxEW,QAAKgB,EAAA,KAAAA,EAAA,OAAAC,IAAEtB,EAAA2B,UAAA3B,EAAA2B,YAAAL,IAAWE,SAAUxB,EAAAyB,cAAgBzB,EAAAmB,YAAY,OAAO,EAnB9ES,OAAAV,EAAAA,EAAAA,IAAA,Y,gDA6BA,GACEW,KAAM,YACNC,KAAAA,GACE,MAAMC,GAAgB/D,EAAAA,EAAAA,IAAI,MACpBoC,GAAUpC,EAAAA,EAAAA,IAAI,GACdgE,GAAgBhE,EAAAA,EAAAA,IAAI,IACpByD,GAAczD,EAAAA,EAAAA,IAAI,GAClBiE,GAAWjE,EAAAA,EAAAA,IAAIkE,OAAOC,YAAc,MAGpC,SAAEpE,EAAQ,aAAEE,EAAY,eAAEU,EAAc,aAAEQ,KAF5BnB,EAAAA,EAAAA,IAAI,SAEyCF,EAAAA,EAAAA,MAE3DkD,GAAiBoB,EAAAA,EAAAA,KAAS,IACvBrE,EAASM,QAGZmC,EAAe6B,GACZA,EAAO,kCAAkCA,IAAS,yBAGrDC,EAAkBA,KACtB,GAAIP,EAAc1D,MAAO,CACvB,MAAMkE,EAAiBR,EAAc1D,MAAMmE,YACrCC,EAAkBP,OAAOQ,YAAcX,EAAc1D,MAAMsE,UAC3DC,EAAiBX,EAAS5D,MAAQ,GAAK,IACvCwE,EAAkBZ,EAAS5D,MAAQ,IAAM,IACzCyE,EAAgBb,EAAS5D,MAAQ,GAAK,GACtC0E,GAAe,GAErB3C,EAAQ/B,MAAQ2E,KAAKC,MAAMV,GAAkBK,EAAiBE,IAC9D,MAAMI,EAAUF,KAAKC,MAAMR,GAAmBI,EAAkBE,IAChEf,EAAc3D,MAAQ+B,EAAQ/B,MAAQ6E,CACxC,GAGIjD,GAAwBmC,EAAAA,EAAAA,KAAS,KACrC,MAAMe,GAAc1B,EAAYpD,MAAQ,GAAK2D,EAAc3D,MACrD+E,EAAWD,EAAanB,EAAc3D,MACtCgF,EAAkBrC,EAAe3C,MAAMiF,MAAMH,EAAYC,GAE/D,OAAOC,EAAgBE,QAAO,CAACC,EAAazE,EAAMF,KAChD,MAAM4E,EAAaT,KAAKC,MAAMpE,EAAQuB,EAAQ/B,OAK9C,OAJKmF,EAAYC,KACfD,EAAYC,GAAc,IAE5BD,EAAYC,GAAYxE,KAAKF,GACtByE,CAAW,GACjB,GAAG,IAGFrC,GAAaiB,EAAAA,EAAAA,KAAS,IAAMY,KAAKU,KAAK1C,EAAe3C,MAAM8B,OAAS6B,EAAc3D,SAElFsD,EAAWA,KACXF,EAAYpD,MAAQ8C,EAAW9C,OACjCoD,EAAYpD,OACd,EAGIkD,EAAWA,KACXE,EAAYpD,MAAQ,GACtBoD,EAAYpD,OACd,EAGIsF,EAAeA,KACnB1B,EAAS5D,MAAQ6D,OAAOC,YAAc,IACtCG,GAAiB,EAiBnB,OAdAsB,EAAAA,EAAAA,KAAU,KACR3F,IACAqE,IACAJ,OAAO2B,iBAAiB,SAAUF,EAAa,KAGjDG,EAAAA,EAAAA,KAAY,KACV5B,OAAO6B,oBAAoB,SAAUJ,EAAa,KAGpDK,EAAAA,EAAAA,IAAM,CAAC5D,EAAS4B,IAAgB,KAC9BP,EAAYpD,MAAQ,CAAC,IAGhB,CACL4B,wBACAe,iBACAS,cACAN,aACAX,cACAmB,WACAJ,WACAQ,gBACA3B,UACAzB,iBACAQ,eAEJ,G,UCtHF,MAAM8E,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,QCHA,GAA4BC,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,gBACRtC,KAAAA,CAAMuC,GAGR,MAAO,CAACzE,EAAUyB,MACRiD,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAaC,GAErC,ICXA,MAAM,EAAc,EAEpB,O","sources":["webpack://vue-assignment/./src/util/movie/URL/wishlist.ts","webpack://vue-assignment/./src/views/home-wishlist/movie-wishlist.vue","webpack://vue-assignment/./src/views/home-wishlist/movie-wishlist.vue?ac46","webpack://vue-assignment/./src/components/home/wishlist/home-wishlist.vue?0a75","webpack://vue-assignment/./src/components/home/wishlist/home-wishlist.vue"],"sourcesContent":["import { ref, Ref } from 'vue';\r\n\r\ninterface Movie {\r\n    id: number;\r\n    title: string;\r\n    poster_path: string;\r\n    // Add other relevant movie properties\r\n}\r\n\r\nexport function useWishlist() {\r\n    const wishlist: Ref<Movie[]> = ref([]);\r\n\r\n    const loadWishlist = (): void => {\r\n        const storedWishlist = localStorage.getItem('movieWishlist');\r\n        if (storedWishlist) {\r\n            wishlist.value = JSON.parse(storedWishlist);\r\n        }\r\n    };\r\n\r\n    const saveWishlist = (): void => {\r\n        localStorage.setItem('movieWishlist', JSON.stringify(wishlist.value));\r\n    };\r\n\r\n    const toggleWishlist = (movie: Movie): void => {\r\n        const index = wishlist.value.findIndex(item => item.id === movie.id);\r\n        if (index === -1) {\r\n            wishlist.value.push(movie);\r\n        } else {\r\n            wishlist.value.splice(index, 1);\r\n        }\r\n        saveWishlist();\r\n    };\r\n\r\n    const isInWishlist = (movieId: number): boolean => {\r\n        return wishlist.value.some(item => item.id === movieId);\r\n    };\r\n\r\n    return {\r\n        wishlist,\r\n        loadWishlist,\r\n        toggleWishlist,\r\n        isInWishlist\r\n    };\r\n}","<template>\r\n  <div class=\"movie-grid\" ref=\"gridContainer\">\r\n    <div :class=\"['grid-container', currentView]\">\r\n      <div v-for=\"(movieGroup, index) in visibleWishlistMovies\" :key=\"index\"\r\n           :class=\"['movie-row', { 'full': movieGroup.length === rowSize }]\">\r\n        <div v-for=\"movie in movieGroup\" :key=\"movie.id\" class=\"movie-card\"\r\n             @click=\"toggleWishlist(movie)\">\r\n          <img :src=\"getImageUrl(movie.poster_path)\" :alt=\"movie.title\">\r\n          <div class=\"movie-title\">{{ movie.title }}</div>\r\n          <div class=\"wishlist-indicator\">üëç</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"wishlistMovies.length === 0\" class=\"empty-wishlist\">\r\n      ÏúÑÏãúÎ¶¨Ïä§Ìä∏Í∞Ä ÎπÑÏñ¥ ÏûàÏäµÎãàÎã§.\r\n    </div>\r\n    <div class=\"pagination\" v-if=\"totalPages > 1\">\r\n      <button @click=\"prevPage\" :disabled=\"currentPage === 1\">&lt; Ïù¥Ï†Ñ</button>\r\n      <span>{{ currentPage }} / {{ totalPages }}</span>\r\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Îã§Ïùå &gt;</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script >\r\nimport { ref, computed, onMounted, onUnmounted, watch } from 'vue';\r\nimport { useWishlist } from '@/util/movie/URL/wishlist';\r\n\r\nexport default {\r\n  name: 'MovieGrid',\r\n  setup() {\r\n    const gridContainer = ref(null);\r\n    const rowSize = ref(4);\r\n    const moviesPerPage = ref(20);\r\n    const currentPage = ref(1);\r\n    const isMobile = ref(window.innerWidth <= 768);\r\n    const currentView = ref('grid');\r\n\r\n    const { wishlist, loadWishlist, toggleWishlist, isInWishlist } = useWishlist();  //\r\n\r\n    const wishlistMovies = computed(() => {\r\n      return wishlist.value;\r\n    });\r\n\r\n    const getImageUrl = (path) => {\r\n      return path ? `https://image.tmdb.org/t/p/w300${path}` : '/placeholder-image.jpg';\r\n    };\r\n\r\n    const calculateLayout = () => {\r\n      if (gridContainer.value) {\r\n        const containerWidth = gridContainer.value.offsetWidth;\r\n        const containerHeight = window.innerHeight - gridContainer.value.offsetTop;\r\n        const movieCardWidth = isMobile.value ? 90 : 220;\r\n        const movieCardHeight = isMobile.value ? 150 : 330;\r\n        const horizontalGap = isMobile.value ? 10 : 15;\r\n        const verticalGap = -10;\r\n\r\n        rowSize.value = Math.floor(containerWidth / (movieCardWidth + horizontalGap));\r\n        const maxRows = Math.floor(containerHeight / (movieCardHeight + verticalGap));\r\n        moviesPerPage.value = rowSize.value * maxRows;\r\n      }\r\n    };\r\n\r\n    const visibleWishlistMovies = computed(() => {\r\n      const startIndex = (currentPage.value - 1) * moviesPerPage.value;\r\n      const endIndex = startIndex + moviesPerPage.value;\r\n      const paginatedMovies = wishlistMovies.value.slice(startIndex, endIndex);\r\n\r\n      return paginatedMovies.reduce((resultArray, item, index) => {\r\n        const groupIndex = Math.floor(index / rowSize.value);\r\n        if (!resultArray[groupIndex]) {\r\n          resultArray[groupIndex] = [];\r\n        }\r\n        resultArray[groupIndex].push(item);\r\n        return resultArray;\r\n      }, []);\r\n    });\r\n\r\n    const totalPages = computed(() => Math.ceil(wishlistMovies.value.length / moviesPerPage.value));\r\n\r\n    const nextPage = () => {\r\n      if (currentPage.value < totalPages.value) {\r\n        currentPage.value++;\r\n      }\r\n    };\r\n\r\n    const prevPage = () => {\r\n      if (currentPage.value > 1) {\r\n        currentPage.value--;\r\n      }\r\n    };\r\n\r\n    const handleResize = () => {\r\n      isMobile.value = window.innerWidth <= 768;\r\n      calculateLayout();\r\n    };\r\n\r\n    onMounted(() => {\r\n      loadWishlist();\r\n      calculateLayout();\r\n      window.addEventListener('resize', handleResize);\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      window.removeEventListener('resize', handleResize);\r\n    });\r\n\r\n    watch([rowSize, moviesPerPage], () => {\r\n      currentPage.value = 1;\r\n    });\r\n\r\n    return {\r\n      visibleWishlistMovies,\r\n      wishlistMovies,\r\n      currentPage,\r\n      totalPages,\r\n      getImageUrl,\r\n      nextPage,\r\n      prevPage,\r\n      gridContainer,\r\n      rowSize,\r\n      toggleWishlist,\r\n      isInWishlist\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.wishlist-indicator {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 10px;\r\n  font-size: 20px;\r\n  background-color: rgba(229, 9, 20, 0.5);\r\n  box-shadow: 0 0 5px rgba(229, 9, 20, 0.7);\r\n}\r\n\r\n.movie-grid {\r\n  width: 100%;\r\n  height: calc(100vh - 200px);\r\n  margin-bottom: 40px;\r\n  margin-top: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.grid-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.movie-row {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0 auto 20px;\r\n  width: 100%;\r\n}\r\n\r\n.grid-container.list .movie-row {\r\n  flex-direction: column;\r\n}\r\n\r\n.movie-card {\r\n  width: 160px;\r\n  margin: 0 10px;\r\n  transition: transform 0.3s;\r\n  position: relative;\r\n}\r\n\r\n.grid-container.list .movie-card {\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.movie-card:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.movie-card img {\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  object-fit: cover;\r\n}\r\n\r\n.grid-container.list .movie-card img {\r\n  width: 100px;\r\n  margin-right: 20px;\r\n}\r\n\r\n.movie-title {\r\n  margin-top: 5px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.grid-container.list .movie-title {\r\n  text-align: left;\r\n  white-space: normal;\r\n}\r\n\r\n.empty-wishlist {\r\n  text-align: center;\r\n  font-size: 18px;\r\n  margin-top: 20px;\r\n  color: #666;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.pagination button {\r\n  background-color: #333;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n}\r\n\r\n.pagination button:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .movie-grid {\r\n    width: 100%;\r\n    height: calc(90svh - 200px);\r\n    margin-bottom: 40px;\r\n    margin-top: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .movie-card {\r\n    width: 90px;\r\n    margin: 0 5px;\r\n  }\r\n\r\n  .movie-title {\r\n    font-size: 12px;\r\n  }\r\n\r\n  .pagination button {\r\n    padding: 8px 12px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .grid-container.list .movie-card img {\r\n    width: 60px;\r\n  }\r\n}\r\n</style>","import { render } from \"./movie-wishlist.vue?vue&type=template&id=4361f86c&scoped=true\"\nimport script from \"./movie-wishlist.vue?vue&type=script&lang=js\"\nexport * from \"./movie-wishlist.vue?vue&type=script&lang=js\"\n\nimport \"./movie-wishlist.vue?vue&type=style&index=0&id=4361f86c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4361f86c\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport HomeWishlist from \"@/views/home-wishlist/movie-wishlist.vue\"\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'home-wishlist',\n  setup(__props) {\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(HomeWishlist))\n}\n}\n\n})","import script from \"./home-wishlist.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./home-wishlist.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["useWishlist","wishlist","ref","loadWishlist","storedWishlist","localStorage","getItem","value","JSON","parse","saveWishlist","setItem","stringify","toggleWishlist","movie","index","findIndex","item","id","push","splice","isInWishlist","movieId","some","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","_ctx","currentView","_Fragment","_renderList","$setup","visibleWishlistMovies","movieGroup","length","rowSize","onClick","$event","src","getImageUrl","poster_path","alt","title","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_2","wishlistMovies","_hoisted_5","_createCommentVNode","totalPages","_hoisted_6","_cache","args","prevPage","disabled","currentPage","_hoisted_7","nextPage","_hoisted_8","name","setup","gridContainer","moviesPerPage","isMobile","window","innerWidth","computed","path","calculateLayout","containerWidth","offsetWidth","containerHeight","innerHeight","offsetTop","movieCardWidth","movieCardHeight","horizontalGap","verticalGap","Math","floor","maxRows","startIndex","endIndex","paginatedMovies","slice","reduce","resultArray","groupIndex","ceil","handleResize","onMounted","addEventListener","onUnmounted","removeEventListener","watch","__exports__","render","_defineComponent","__name","__props","_openBlock","_createBlock","HomeWishlist"],"sourceRoot":""}